<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
    "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<!--
     This file is a cleaned up version of one produced by the code in the
     gradient branch of -lib, -svg. It demonstrates the problem I am having
     trying to get linear gradients to transform properly. The code saves the
     accumalated transforms applied to the gradient by applying them to its
     `lGradTrans` field, which is initialized to the identity transform. When
     the path is ready to be rendered the inverse of the accumulated transform
     is applied before applying the gradient fill. Then the filled path is
     re-transformed (in this case rotated 1/16 turn). In theory the gradient
     should rotate with the path but the gradient does not rotate.

     Here is the haskell code used to generate the original diagram, run at a
     width of 750:

        {- LGradient is the data constructor of a linear graient texture, the
           the first field is a list of color stops, followed by the starting
           point, ending point, identity transform, and a spread method -}

        g = LGradient [ (SomeColor red, 0), (SomeColor white, 0.5)
                      , (SomeColor blue, 1)]
                        (0 ^& 0) (1 ^& 0) (scaling 1) GradPad  {-scaling 1 == id-}

        s = square 0.5 # fillTexture (LG g) # lw 0 # rotateBy (1/16)
-->

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"
    width="750" height="750" font-size="1" viewBox="0 0 750 750">

    <!-- This is correct, we generate a linear gradient with three color
         stops, no gradientTransform, and no spreadMethod (defaults to pad) -->
    <linearGradient id="gradient0" x1="0" y1="0" x2="1" y2="0">
            <stop stop-color="rgb(255,0,  0  )" offset="0.0" />
            <stop stop-color="rgb(255,255,255)" offset="0.5" />
            <stop stop-color="rgb(0,0,    255)" offset="1.0" />
    </linearGradient>

        <!-- Scale and position the entire diagram -->
        <g transform="matrix( 1000,    0
                            , 0,       1000
                            , 375,     375)">
            <!-- Cummulative transform applied to gradient, i.e.
                 the scale and position above and a 1/16 turn rotation.
            -->
            <g transform="matrix( 964.24, -399.40
                                ,-399.40, -964.24
                                ,   0.00,    0.00)">
                <!-- Inverse of rotation and scale that was applied
                     to the gradient. I checked that these two matrices
                     are in fact inverses. It seems no matter where I put
                     fill="url(#gradient0) in the hierarchy - nothing changes?"
                     The idea is for the gradient to be applied to the
                     untransformed path and then the transform (rotation)
                     would be a applied to the filled path, thereby rotating
                     the gradient.
                -->
                <g  fill="url(#gradient0)"
                    transform="matrix( 8.85e-4, -3.67e-4
                                     ,-3.67e-4, -8.85e-4
                                     , 0.00,     0.00)">
                    <!-- Square rotated 1/16 Turn -->
                    <path d="M  0.3266, 0.1352
                             l -0.1913,-0.4619
                             l -0.4619, 0.19134
                             l  0.1913, 0.46193
                             l  0.4619,-0.19134 Z" />
                </g>
            </g>
        </g>
</svg>